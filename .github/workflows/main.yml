name: CI/CD

on:
  push:
    branches:
      - main
jobs:
  flutter_test:
    name: Run Flutter analyze and test
    # runs-on: ubuntu-latest
    runs-on: windows-latest
    if: ${{ contains(github.event.head_commit.message, 'deploy') }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "2.10.1"
          channel: "stable"
      - run: flutter pub get
      - run: flutter analyze
      # Usar quando for utilizar o windows
      - run: flutter format lib/
      - run: flutter format test/
      #
      - run: flutter format --dry-run --set-exit-if-changed lib/
      - run: flutter format --dry-run --set-exit-if-changed test/
      - run: flutter test --coverage
      - run: flutter test --machine > test-results.json
      - uses: dorny/test-reporter@v1.4.2
        with:
          name: test-results
          path: test-results.json
          reporter: flutter-json
      - uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
        with:
          min_coverage: 0

  build_apk:
    name: Build Flutter (Android)
    needs: [flutter_test]
    runs-on: windows-latest
    if: ${{ contains(github.event.head_commit.message, 'deploy') }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "2.10.1"
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build apk
      - name: Upload apk
        uses: actions/upload-artifact@v2.1.4
        with:
          name: apk
          path: build/app/outputs/apk/release/app-release.apk